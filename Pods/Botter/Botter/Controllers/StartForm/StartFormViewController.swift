//
//  StartFormViewController.swift
//  Botter
//
//  Created by Nora on 7/15/20.
//  Copyright (c) 2020 BlueCrunch. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class b_StartFormViewController: b_StartConversationViewController {
    
    // MARK: - Public properties -
    var faqsList = [b_FaqData]()
    @IBOutlet weak var tableView : UITableView!
    @IBOutlet weak var searchBox : SearchBox!
    
    
    var presenter: StartFormPresenterInterface!
    
    var loader = b_LoaderManager()
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.loadForms()
        searchBox.cParent = self
        searchBox.isHidden = !BotterSettingsManager.hasFAQs
        if !BotterSettingsManager.hasFAQs{
            updateFooterHeight(height: 140)
        }
        
        if #available(iOS 13.0, *) {
            overrideUserInterfaceStyle = .light
        } else {
            // Fallback on earlier versions
        }
    }
    
   
    
   
    
    override func newConversationClicked() {
        self.presenter.validateThenSubmitForm()
    }
    
    
}

// MARK: - Extensions -

extension b_StartFormViewController: StartFormViewInterface {
    
    func setFaqsData(faqsData: [b_FaqData]) {
        searchBox.setFaqsData(faqsData: faqsData)
    }
    
    func updateFooterHeight(height : Int){
        
        tableView.tableFooterView?.frame.size = CGSize(width: tableView.frame.width, height: CGFloat(height))
        tableView.reloadData()
    }
    
    func showMsg(msg: String) {
        self.b_showMessage(msg)
    }
    
    func showLoader() {
        self.loader.show(inRect: self.view.frame, inView: self.view)
    }
    
    func hideLoader() {
        self.loader.remove()
    }
    
    func reload() {
        self.tableView.reloadData()
    }
}

extension b_StartFormViewController : UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.presenter.dataCells.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        return self.presenter.dataCells[indexPath.row]
    }
    
    
}
